{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { ThemeProvider as EmotionThemeProvider } from 'emotion-theming';\nimport customTheme from '@/styles/theme';\nimport { ThemeProvider as ChakraThemeProvider, ColorModeProvider, CSSReset } from '@chakra-ui/core';\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nvar ThemeContainer = function ThemeContainer(_ref) {\n  var children = _ref.children;\n  return ___EmotionJSX(ChakraThemeProvider, {\n    theme: customTheme\n  }, ___EmotionJSX(ColorModeProvider, {\n    value: \"light\"\n  }, ___EmotionJSX(EmotionThemeProvider, {\n    theme: {}\n  }, ___EmotionJSX(CSSReset, {\n    config: function config(theme, _config) {\n      return _objectSpread(_objectSpread({}, _config), {}, {\n        light: _objectSpread(_objectSpread({}, _config.light), {}, {\n          bg: theme.colors.blue[300],\n          color: theme.colors.gray[700]\n        })\n      });\n    }\n  }), children)));\n};\n\nexport default ThemeContainer;","map":null,"metadata":{},"sourceType":"module"}