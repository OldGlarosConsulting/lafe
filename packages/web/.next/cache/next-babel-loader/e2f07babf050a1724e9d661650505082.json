{"ast":null,"code":"var _jsxFileName = \"/home/matheus/Documents/drive-sync/Projects/lafe/packages/web/src/components/DashedChart/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport dynamic from 'next/dynamic';\nimport { Box } from '@chakra-ui/core';\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\nconst Chart = dynamic(() => import('react-apexcharts'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('react-apexcharts')],\n    modules: ['react-apexcharts']\n  }\n});\n\nconst ApexBarChart = ({\n  data,\n  title\n}) => {\n  const {\n    0: chartConfigs,\n    1: setChartConfigs\n  } = useState({\n    series: data.bars,\n    options: {\n      chart: {\n        type: 'line',\n        height: 350,\n        zoom: {\n          enabled: false\n        }\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        width: [5, 7, 5],\n        curve: 'straight',\n        dashArray: [0, 8, 5]\n      },\n      title: {\n        text: title,\n        align: 'center'\n      },\n      legend: {\n        tooltipHoverFormatter(val, opts) {\n          return `${val} - ${opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex]}`;\n        }\n\n      },\n      markers: {\n        size: 0,\n        hover: {\n          sizeOffset: 6\n        }\n      },\n      xaxis: {\n        categories: data.categories\n      },\n      yaxis: {\n        title: {\n          text: '% (porcentagem)'\n        }\n      },\n      tooltip: {\n        y: [{\n          title: {\n            formatter(val) {\n              return `${val}%`;\n            }\n\n          }\n        }, {\n          title: {\n            formatter(val) {\n              return `${val}%`;\n            }\n\n          }\n        }, {\n          title: {\n            formatter(val) {\n              return val;\n            }\n\n          }\n        }]\n      },\n      grid: {\n        borderColor: '#f1f1f1'\n      }\n    }\n  });\n  return ___EmotionJSX(Box, {\n    width: \"100%\",\n    marginTop: 6,\n    borderRadius: 8,\n    padding: 2,\n    background: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, ___EmotionJSX(Chart, {\n    options: chartConfigs.options,\n    series: chartConfigs.series,\n    type: \"line\",\n    height: 350,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ApexBarChart;","map":{"version":3,"sources":["/home/matheus/Documents/drive-sync/Projects/lafe/packages/web/src/components/DashedChart/index.tsx"],"names":["React","useState","dynamic","Box","Chart","ssr","ApexBarChart","data","title","chartConfigs","setChartConfigs","series","bars","options","chart","type","height","zoom","enabled","dataLabels","stroke","width","curve","dashArray","text","align","legend","tooltipHoverFormatter","val","opts","w","globals","seriesIndex","dataPointIndex","markers","size","hover","sizeOffset","xaxis","categories","yaxis","tooltip","y","formatter","grid","borderColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Props as ApexChartProps } from 'react-apexcharts';\n\nimport dynamic from 'next/dynamic';\n\nimport { Box } from '@chakra-ui/core';\n\ninterface IBarChartProps extends ApexChartProps {\n  title: string;\n  data: {\n    bars: Array<{\n      color: string;\n      name: string;\n      data: number[];\n    }>;\n    categories: Array<string>;\n  };\n}\n\ninterface IConfigs {\n  series: Array<{\n    color: string;\n    name: string;\n    data: number[];\n  }>;\n  options: object;\n}\n\nconst Chart = dynamic(() => import('react-apexcharts'), { ssr: false });\n\nconst ApexBarChart: React.FC<IBarChartProps> = ({ data, title }) => {\n  const [chartConfigs, setChartConfigs] = useState<IConfigs>({\n    series: data.bars,\n    options: {\n      chart: {\n        type: 'line',\n        height: 350,\n        zoom: {\n          enabled: false,\n        },\n      },\n      dataLabels: {\n        enabled: false,\n      },\n      stroke: {\n        width: [5, 7, 5],\n        curve: 'straight',\n        dashArray: [0, 8, 5],\n      },\n      title: {\n        text: title,\n        align: 'center',\n      },\n      legend: {\n        tooltipHoverFormatter(val, opts) {\n          return `${val} - ${\n            opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex]\n          }`;\n        },\n      },\n      markers: {\n        size: 0,\n        hover: {\n          sizeOffset: 6,\n        },\n      },\n      xaxis: {\n        categories: data.categories,\n      },\n      yaxis: {\n        title: {\n          text: '% (porcentagem)',\n        },\n      },\n      tooltip: {\n        y: [\n          {\n            title: {\n              formatter(val) {\n                return `${val}%`;\n              },\n            },\n          },\n          {\n            title: {\n              formatter(val) {\n                return `${val}%`;\n              },\n            },\n          },\n          {\n            title: {\n              formatter(val) {\n                return val;\n              },\n            },\n          },\n        ],\n      },\n      grid: {\n        borderColor: '#f1f1f1',\n      },\n    },\n  });\n\n  return (\n    <Box\n      width=\"100%\"\n      marginTop={6}\n      borderRadius={8}\n      padding={2}\n      background=\"white\"\n    >\n      <Chart\n        options={chartConfigs.options}\n        series={chartConfigs.series}\n        type=\"line\"\n        height={350}\n      />\n    </Box>\n  );\n};\nexport default ApexBarChart;\n"]},"metadata":{},"sourceType":"module"}