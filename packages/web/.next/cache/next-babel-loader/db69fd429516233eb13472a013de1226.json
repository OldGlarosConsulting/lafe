{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { createContext, useCallback, useContext, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport usePersistedState from '@/utils/hooks/usePersistedState';\nimport api from '../services/api';\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\nvar AuthenticationContext = /*#__PURE__*/createContext({});\n\nvar AuthenticationProvider = function AuthenticationProvider(_ref) {\n  var children = _ref.children;\n\n  var _usePersistedState = usePersistedState('session', null),\n      _usePersistedState2 = _slicedToArray(_usePersistedState, 2),\n      data = _usePersistedState2[0],\n      setData = _usePersistedState2[1];\n\n  var router = useRouter();\n  var isLoggedIn = useCallback(function () {\n    return !!(data === null || data === void 0 ? void 0 : data.access_token);\n  }, [data]);\n  var logIn = useCallback( /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n      var email, password, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              email = _ref2.email, password = _ref2.password;\n              _context.next = 3;\n              return api.post('/sessions', {\n                email: email,\n                password: password\n              });\n\n            case 3:\n              response = _context.sent;\n              setData(response.data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }(), [setData]);\n  var logOut = useCallback(function () {\n    setData(null);\n    router.replace('/login');\n  }, [router, setData]);\n  useEffect(function () {\n    var route = router.asPath;\n\n    var isRoute = function isRoute(name) {\n      return route.split('?')[0] === name;\n    };\n\n    if (!isLoggedIn()) {\n      if (!isRoute('/login')) {\n        router.replace('/login');\n      }\n\n      return;\n    }\n\n    if (isRoute('/') || isRoute('/login') || isRoute('/app')) {\n      router.replace('/dashboard');\n      return;\n    }\n\n    api.get('profile').then(function (response) {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        user: response.data\n      }));\n    });\n  }, [isLoggedIn, data, setData, router]);\n  return ___EmotionJSX(AuthenticationContext.Provider, {\n    value: {\n      user: data === null || data === void 0 ? void 0 : data.user,\n      isLoggedIn: isLoggedIn,\n      logIn: logIn,\n      logOut: logOut\n    }\n  }, children);\n};\n\nfunction useAuthentication() {\n  var context = useContext(AuthenticationContext);\n\n  if (!context) {\n    throw new Error(\"'useAuthentication' must be used within an 'AuthenticationProvider'\");\n  }\n\n  return context;\n}\n\nexport { AuthenticationProvider, useAuthentication };","map":null,"metadata":{},"sourceType":"module"}