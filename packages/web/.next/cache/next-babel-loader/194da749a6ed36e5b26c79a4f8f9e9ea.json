{"ast":null,"code":"var _jsxFileName = \"/home/matheus/Documents/drive-sync/Projects/lafe/packages/web/src/components/Table/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useMemo } from 'react';\nimport { FiChevronDown, FiChevronLeft, FiChevronRight, FiChevronsLeft, FiChevronsRight, FiChevronUp } from 'react-icons/fi';\nimport { useMediaQuery } from 'react-responsive';\nimport { usePagination, useSortBy, useTable } from 'react-table';\nimport { Flex, Text } from '@chakra-ui/core';\nimport Card from './Card';\nimport BottomSection from './Card/CardFooter';\nimport TopSection from './Card/CardHeader/index';\nimport { StyledTable, TableCell, TableHead, TableIconButton, TableRow } from './styles';\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst Table = (_ref) => {\n  let {\n    heading,\n    columns,\n    data,\n    pageSize: initialPageSize = 5,\n    onRowClick\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"heading\", \"columns\", \"data\", \"pageSize\", \"onRowClick\"]);\n\n  const tableColumns = useMemo(() => columns, [columns]);\n  const isTabletOrMobile = useMediaQuery({\n    query: '(max-width: 40em)'\n  });\n  const {\n    getTableProps,\n    headerGroups,\n    prepareRow,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: {\n      pageIndex,\n      pageSize\n    }\n  } = useTable({\n    columns: tableColumns,\n    data,\n    initialState: {\n      pageIndex: 0,\n      pageSize: initialPageSize\n    }\n  }, useSortBy, usePagination);\n  return ___EmotionJSX(Card, _extends({\n    flexDirection: \"column\",\n    flex: 1,\n    maxWidth: \"100%\",\n    width: \"100%\"\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }), heading && ___EmotionJSX(TopSection, {\n    alignItems: \"center\",\n    fontWeight: \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, heading), ___EmotionJSX(StyledTable, _extends({}, getTableProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), ___EmotionJSX(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, headerGroups.map(headerGroup => ___EmotionJSX(Flex, _extends({\n    key: headerGroup.id,\n    flex: 1,\n    flexDirection: \"row\"\n  }, headerGroup.getHeaderGroupProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }), headerGroup.headers.map(column => ___EmotionJSX(TableCell, _extends({\n    p: 4,\n    key: column.id,\n    bg: \"gray.50\",\n    justifyContent: \"space-between\"\n  }, column.getHeaderProps(), column.getSortByToggleProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }), ___EmotionJSX(Text, {\n    fontWeight: \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }\n  }, column.render('Header')), (() => {\n    if (column.isSorted) {\n      if (column.isSortedDesc) {\n        return ___EmotionJSX(FiChevronDown, {\n          size: 20,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 32\n          }\n        });\n      }\n\n      return ___EmotionJSX(FiChevronUp, {\n        size: 20,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 30\n        }\n      });\n    }\n\n    return '';\n  })()))))), ___EmotionJSX(Flex, {\n    flexDirection: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, page.map((row, key) => {\n    prepareRow(row);\n    return ___EmotionJSX(TableRow, _extends({\n      onClick: () => onRowClick && onRowClick(row),\n      key: key // eslint-disable-line\n      ,\n      flexDirection: \"row\"\n    }, row.getRowProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    }), row.cells.map(cell => ___EmotionJSX(TableCell, _extends({\n      key: cell.row.index,\n      justifyContent: \"flex-start\",\n      p: 4\n    }, cell.getCellProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 19\n      }\n    }), cell.render('Cell'))));\n  }))), ___EmotionJSX(BottomSection, {\n    justifyContent: \"space-between\",\n    flexDirection: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, ___EmotionJSX(Flex, {\n    flexDirection: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(TableIconButton, {\n    mr: 2,\n    onClick: () => gotoPage(0),\n    isDisabled: !canPreviousPage,\n    icon: () => ___EmotionJSX(FiChevronsLeft, {\n      size: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }), ___EmotionJSX(TableIconButton, {\n    mr: 2,\n    isDisabled: !canPreviousPage,\n    onClick: () => previousPage(),\n    icon: () => ___EmotionJSX(FiChevronLeft, {\n      size: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 25\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  })), ___EmotionJSX(Flex, {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Text, {\n    mr: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, \"P\\xE1gina\", ' ', ___EmotionJSX(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, pageIndex + 1, \" de\", pageOptions.length)), !isTabletOrMobile && ___EmotionJSX(\"select\", {\n    value: pageSize,\n    onChange: e => {\n      setPageSize(Number(e.target.value));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, [5, 10, 20, 30, 40, 50].map(size => ___EmotionJSX(\"option\", {\n    key: size,\n    value: size,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }, size, \" linhas\")))), ___EmotionJSX(Flex, {\n    flexDirection: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(TableIconButton, {\n    ml: 2,\n    isDisabled: !canNextPage,\n    onClick: () => nextPage(),\n    icon: () => ___EmotionJSX(FiChevronRight, {\n      size: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 25\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  }), ___EmotionJSX(TableIconButton, {\n    ml: 2,\n    onClick: () => gotoPage(pageCount ? pageCount - 1 : 1),\n    isDisabled: !canNextPage,\n    icon: () => ___EmotionJSX(FiChevronsRight, {\n      size: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 25\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Table;","map":{"version":3,"sources":["/home/matheus/Documents/drive-sync/Projects/lafe/packages/web/src/components/Table/index.tsx"],"names":["React","useMemo","FiChevronDown","FiChevronLeft","FiChevronRight","FiChevronsLeft","FiChevronsRight","FiChevronUp","useMediaQuery","usePagination","useSortBy","useTable","Flex","Text","Card","BottomSection","TopSection","StyledTable","TableCell","TableHead","TableIconButton","TableRow","Table","heading","columns","data","pageSize","initialPageSize","onRowClick","rest","tableColumns","isTabletOrMobile","query","getTableProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageIndex","initialState","map","headerGroup","id","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","key","getRowProps","cells","cell","index","getCellProps","length","e","Number","target","value","size"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react';\nimport {\n  FiChevronDown,\n  FiChevronLeft,\n  FiChevronRight,\n  FiChevronsLeft,\n  FiChevronsRight,\n  FiChevronUp,\n} from 'react-icons/fi';\nimport { useMediaQuery } from 'react-responsive';\nimport { Column, Row, usePagination, useSortBy, useTable } from 'react-table';\n\nimport { BoxProps, Flex, Text } from '@chakra-ui/core';\n\nimport Card from './Card';\nimport BottomSection from './Card/CardFooter';\nimport TopSection from './Card/CardHeader/index';\nimport {\n  StyledTable,\n  TableCell,\n  TableHead,\n  TableIconButton,\n  TableRow,\n} from './styles';\n\ninterface ITableProps<T extends object> extends BoxProps {\n  heading?: React.ReactNode;\n  columns: Column<T>[];\n  data: any;\n  pageSize?: number;\n  onRowClick?: (row: Row<T>) => void;\n}\n\nconst Table = <T extends object>({\n  heading,\n  columns,\n  data,\n  pageSize: initialPageSize = 5,\n  onRowClick,\n  ...rest\n}: ITableProps<T>) => {\n  const tableColumns = useMemo(() => columns, [columns]);\n\n  const isTabletOrMobile = useMediaQuery({ query: '(max-width: 40em)' });\n\n  const {\n    getTableProps,\n    headerGroups,\n    prepareRow,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: { pageIndex, pageSize },\n  } = useTable<T>(\n    {\n      columns: tableColumns,\n      data,\n      initialState: {\n        pageIndex: 0,\n        pageSize: initialPageSize,\n      } as any,\n    },\n    useSortBy,\n    usePagination,\n  ) as any;\n\n  return (\n    <Card\n      flexDirection=\"column\"\n      flex={1}\n      maxWidth=\"100%\"\n      width=\"100%\"\n      {...rest}\n    >\n      {heading && (\n        <TopSection alignItems=\"center\" fontWeight=\"bold\">\n          {heading}\n        </TopSection>\n      )}\n\n      <StyledTable {...getTableProps()}>\n        <TableHead>\n          {headerGroups.map(headerGroup => (\n            <Flex\n              key={headerGroup.id}\n              flex={1}\n              flexDirection=\"row\"\n              {...headerGroup.getHeaderGroupProps()}\n            >\n              {headerGroup.headers.map(column => (\n                <TableCell\n                  p={4}\n                  key={column.id}\n                  bg=\"gray.50\"\n                  justifyContent=\"space-between\"\n                  {...column.getHeaderProps()}\n                  {...column.getSortByToggleProps()}\n                >\n                  <Text fontWeight=\"bold\">{column.render('Header')}</Text>\n\n                  {(() => {\n                    if (column.isSorted) {\n                      if (column.isSortedDesc) {\n                        return <FiChevronDown size={20} />;\n                      }\n\n                      return <FiChevronUp size={20} />;\n                    }\n\n                    return '';\n                  })()}\n                </TableCell>\n              ))}\n            </Flex>\n          ))}\n        </TableHead>\n\n        <Flex flexDirection=\"column\">\n          {page.map((row, key) => {\n            prepareRow(row);\n\n            return (\n              <TableRow\n                onClick={() => onRowClick && onRowClick(row)}\n                  key={key} // eslint-disable-line\n                flexDirection=\"row\"\n                {...row.getRowProps()}\n              >\n                {row.cells.map(cell => (\n                  <TableCell\n                    key={cell.row.index}\n                    justifyContent=\"flex-start\"\n                    p={4}\n                    {...cell.getCellProps()}\n                  >\n                    {cell.render('Cell')}\n                  </TableCell>\n                ))}\n              </TableRow>\n            );\n          })}\n        </Flex>\n      </StyledTable>\n\n      <BottomSection justifyContent=\"space-between\" flexDirection=\"row\">\n        <Flex flexDirection=\"row\">\n          <TableIconButton\n            mr={2}\n            onClick={() => gotoPage(0)}\n            isDisabled={!canPreviousPage}\n            icon={() => <FiChevronsLeft size={20} />}\n          />\n\n          <TableIconButton\n            mr={2}\n            isDisabled={!canPreviousPage}\n            onClick={() => previousPage()}\n            icon={() => <FiChevronLeft size={20} />}\n          />\n        </Flex>\n\n        <Flex justifyContent=\"center\" alignItems=\"center\">\n          <Text mr={4}>\n            Página{' '}\n            <strong>\n              {pageIndex + 1} de\n              {pageOptions.length}\n            </strong>\n          </Text>\n\n          {!isTabletOrMobile && (\n            <select\n              value={pageSize}\n              onChange={e => {\n                setPageSize(Number(e.target.value));\n              }}\n            >\n              {[5, 10, 20, 30, 40, 50].map(size => (\n                <option key={size} value={size}>\n                  {size} linhas\n                </option>\n              ))}\n            </select>\n          )}\n        </Flex>\n\n        <Flex flexDirection=\"row\">\n          <TableIconButton\n            ml={2}\n            isDisabled={!canNextPage}\n            onClick={() => nextPage()}\n            icon={() => <FiChevronRight size={20} />}\n          />\n\n          <TableIconButton\n            ml={2}\n            onClick={() => gotoPage(pageCount ? pageCount - 1 : 1)}\n            isDisabled={!canNextPage}\n            icon={() => <FiChevronsRight size={20} />}\n          />\n        </Flex>\n      </BottomSection>\n    </Card>\n  );\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}