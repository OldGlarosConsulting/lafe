{"ast":null,"code":"var _jsxFileName = \"/home/matheus/Documents/drive-sync/Projects/endor/packages/web/src/components/Modals/CreateCustomersModal/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useRef } from 'react';\nimport { Button, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, useToast } from '@chakra-ui/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport DatePicker from '@/components/DatePicker';\nimport Input from '@/components/Input';\nimport Select from '@/components/Select';\nimport getValidationErrors from '@/utils/getValidationErrors';\nimport api from '../../../services/api';\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst CreateCustomersModal = ({\n  isOpen,\n  onClose,\n  onSave\n}) => {\n  const formRef = useRef(null);\n  const toast = useToast();\n  const handleSubmit = useCallback(async (data, event) => {\n    try {\n      var _formRef$current;\n\n      (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors({});\n      const schema = Yup.object().shape({\n        name: Yup.string().required('Nome obrigatório'),\n        email: Yup.string().email().required('E-mail obrigatória'),\n        telephone: Yup.string().required('Telefone obrigatório'),\n        gender: Yup.string().required('Gênero obrigatório'),\n        cpf: Yup.string().length(11, 'Cpf deve ter somente 11 dígitos').required('Cpf obrigatório'),\n        birth_date: Yup.date().required('Data de nascimento obrigatória')\n      });\n      await schema.validate(data, {\n        abortEarly: false\n      });\n      await api.post('customers', data);\n      toast({\n        status: 'success',\n        title: 'Cliente registrado com sucesso!',\n        position: 'top',\n        duration: 3000\n      });\n      onClose(event);\n      onSave();\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        var _formRef$current2;\n\n        const errors = getValidationErrors(err);\n        (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setErrors(errors);\n        return;\n      }\n\n      toast({\n        status: 'error',\n        title: 'Erro no registro do cliente',\n        description: 'Ocorreu um erro ao tentar registrar o cliente, tente novamente.',\n        position: 'top',\n        duration: 5000\n      });\n    }\n  }, []);\n  return ___EmotionJSX(Modal, {\n    isOpen: isOpen,\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, ___EmotionJSX(ModalOverlay, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }), ___EmotionJSX(ModalContent, {\n    borderRadius: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, ___EmotionJSX(ModalHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, \"Registrar cliente\"), ___EmotionJSX(ModalCloseButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }), ___EmotionJSX(Form, {\n    ref: formRef,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(ModalBody, {\n    paddingBottom: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(Input, {\n    name: \"name\",\n    placeholder: \"Nome\",\n    containerProps: {\n      border: '1px solid',\n      borderColor: 'gray.400',\n      bg: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }), ___EmotionJSX(DatePicker, {\n    name: \"birth_date\",\n    placeholderText: \"Data de nascimento\",\n    containerProps: {\n      marginTop: 3,\n      color: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }), ___EmotionJSX(Input, {\n    name: \"email\",\n    placeholder: \"E-mail\",\n    containerProps: {\n      border: '1px solid',\n      borderColor: 'gray.400',\n      bg: 'white',\n      marginTop: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }), ___EmotionJSX(Input, {\n    name: \"telephone\",\n    placeholder: \"Telefone\",\n    containerProps: {\n      border: '1px solid',\n      borderColor: 'gray.400',\n      bg: 'white',\n      marginTop: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }), ___EmotionJSX(Input, {\n    name: \"cpf\",\n    placeholder: \"CPF\",\n    containerProps: {\n      border: '1px solid',\n      borderColor: 'gray.400',\n      bg: 'white',\n      marginTop: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }), ___EmotionJSX(Select, {\n    name: \"gender\",\n    bg: \"white\",\n    containerProps: {\n      border: '1px solid',\n      borderColor: 'gray.400',\n      bg: 'white',\n      marginTop: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(\"option\", {\n    value: \"Masculino\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }, \"Masculino\"), ___EmotionJSX(\"option\", {\n    value: \"Feminino\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 15\n    }\n  }, \"Feminino\"))), ___EmotionJSX(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(Button, {\n    variant: \"ghost\",\n    onClick: onClose,\n    marginRight: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, \"Cancelar\"), ___EmotionJSX(Button, {\n    type: \"submit\",\n    variantColor: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, \"Confirmar\")))));\n};\n\nexport default CreateCustomersModal;","map":{"version":3,"sources":["/home/matheus/Documents/drive-sync/Projects/endor/packages/web/src/components/Modals/CreateCustomersModal/index.tsx"],"names":["React","useCallback","useRef","Button","Modal","ModalBody","ModalCloseButton","ModalContent","ModalFooter","ModalHeader","ModalOverlay","useToast","Form","Yup","DatePicker","Input","Select","getValidationErrors","api","CreateCustomersModal","isOpen","onClose","onSave","formRef","toast","handleSubmit","data","event","current","setErrors","schema","object","shape","name","string","required","email","telephone","gender","cpf","length","birth_date","date","validate","abortEarly","post","status","title","position","duration","err","ValidationError","errors","description","border","borderColor","bg","marginTop","color"],"mappings":"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","sourcesContent":["import React, { useCallback, useRef } from 'react';\n\nimport {\n  Button,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  useToast,\n} from '@chakra-ui/core';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\n\nimport DatePicker from '@/components/DatePicker';\nimport Input from '@/components/Input';\nimport Select from '@/components/Select';\nimport getValidationErrors from '@/utils/getValidationErrors';\n\nimport api from '../../../services/api';\n\ninterface IFormData {\n  name: string;\n  email: string;\n  telephone: string;\n  gender: string;\n  cpf: string;\n  birth_date: Date;\n}\n\ninterface ICreateCustomersModalProps {\n  isOpen: boolean;\n  onClose?: (\n    event: React.MouseEvent | React.KeyboardEvent,\n    reason?: 'pressedEscape' | 'clickedOverlay',\n  ) => void;\n  onSave: () => void;\n}\n\nconst CreateCustomersModal: React.FC<ICreateCustomersModalProps> = ({\n  isOpen,\n  onClose,\n  onSave,\n}) => {\n  const formRef = useRef<FormHandles>(null);\n\n  const toast = useToast();\n\n  const handleSubmit = useCallback(async (data: IFormData, event) => {\n    try {\n      formRef.current?.setErrors({});\n\n      const schema = Yup.object().shape({\n        name: Yup.string().required('Nome obrigatório'),\n        email: Yup.string().email().required('E-mail obrigatória'),\n        telephone: Yup.string().required('Telefone obrigatório'),\n        gender: Yup.string().required('Gênero obrigatório'),\n        cpf: Yup.string()\n          .length(11, 'Cpf deve ter somente 11 dígitos')\n          .required('Cpf obrigatório'),\n        birth_date: Yup.date().required('Data de nascimento obrigatória'),\n      });\n\n      await schema.validate(data, { abortEarly: false });\n\n      await api.post('customers', data);\n\n      toast({\n        status: 'success',\n        title: 'Cliente registrado com sucesso!',\n        position: 'top',\n        duration: 3000,\n      });\n\n      onClose(event);\n      onSave();\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        const errors = getValidationErrors(err);\n\n        formRef.current?.setErrors(errors);\n\n        return;\n      }\n\n      toast({\n        status: 'error',\n        title: 'Erro no registro do cliente',\n        description:\n          'Ocorreu um erro ao tentar registrar o cliente, tente novamente.',\n        position: 'top',\n        duration: 5000,\n      });\n    }\n  }, []);\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n\n      <ModalContent borderRadius=\"md\">\n        <ModalHeader>Registrar cliente</ModalHeader>\n        <ModalCloseButton />\n\n        <Form ref={formRef} onSubmit={handleSubmit}>\n          <ModalBody paddingBottom={4}>\n            <Input\n              name=\"name\"\n              placeholder=\"Nome\"\n              containerProps={{\n                border: '1px solid',\n                borderColor: 'gray.400',\n                bg: 'white',\n              }}\n            />\n\n            <DatePicker\n              name=\"birth_date\"\n              placeholderText=\"Data de nascimento\"\n              containerProps={{ marginTop: 3, color: 'black' }}\n            />\n\n            <Input\n              name=\"email\"\n              placeholder=\"E-mail\"\n              containerProps={{\n                border: '1px solid',\n                borderColor: 'gray.400',\n                bg: 'white',\n                marginTop: 3,\n              }}\n            />\n\n            <Input\n              name=\"telephone\"\n              placeholder=\"Telefone\"\n              containerProps={{\n                border: '1px solid',\n                borderColor: 'gray.400',\n                bg: 'white',\n                marginTop: 3,\n              }}\n            />\n\n            <Input\n              name=\"cpf\"\n              placeholder=\"CPF\"\n              containerProps={{\n                border: '1px solid',\n                borderColor: 'gray.400',\n                bg: 'white',\n                marginTop: 3,\n              }}\n            />\n\n            <Select\n              name=\"gender\"\n              bg=\"white\"\n              containerProps={{\n                border: '1px solid',\n                borderColor: 'gray.400',\n                bg: 'white',\n                marginTop: 3,\n              }}\n            >\n              <option value=\"Masculino\">Masculino</option>\n              <option value=\"Feminino\">Feminino</option>\n            </Select>\n          </ModalBody>\n\n          <ModalFooter>\n            <Button variant=\"ghost\" onClick={onClose} marginRight={4}>\n              Cancelar\n            </Button>\n\n            <Button type=\"submit\" variantColor=\"green\">\n              Confirmar\n            </Button>\n          </ModalFooter>\n        </Form>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default CreateCustomersModal;\n"]},"metadata":{},"sourceType":"module"}