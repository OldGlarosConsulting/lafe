{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { Select as ChakraSelect } from '@chakra-ui/core';\nimport { useField } from '@unform/core';\nimport { Container } from './styles';\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nvar ReactSelect = function ReactSelect(_ref) {\n  var name = _ref.name,\n      children = _ref.children,\n      containerProps = _ref.containerProps,\n      rest = _objectWithoutProperties(_ref, [\"name\", \"children\", \"containerProps\"]);\n\n  var selectRef = useRef(null);\n\n  var _useState = useState(false),\n      isFocused = _useState[0],\n      setIsFocused = _useState[1];\n\n  var _useState2 = useState(false),\n      isFilled = _useState2[0],\n      setIsFilled = _useState2[1];\n\n  var _useField = useField(name),\n      fieldName = _useField.fieldName,\n      defaultValue = _useField.defaultValue,\n      error = _useField.error,\n      registerField = _useField.registerField;\n\n  var handleInputFocus = useCallback(function () {\n    setIsFocused(true);\n  }, []);\n  var handleInputBlur = useCallback(function () {\n    var _selectRef$current;\n\n    setIsFocused(false);\n    setIsFilled(!!((_selectRef$current = selectRef.current) === null || _selectRef$current === void 0 ? void 0 : _selectRef$current.value));\n  }, []);\n  useEffect(function () {\n    registerField({\n      name: fieldName,\n      ref: selectRef.current,\n      path: 'value'\n    });\n  }, [fieldName, registerField]);\n  return ___EmotionJSX(Container, _extends({\n    isFocused: isFocused,\n    isFilled: isFilled,\n    isErrored: !!error,\n    bg: \"green.50\",\n    width: \"100%\",\n    height: 12,\n    borderRadius: \"md\",\n    paddingLeft: 4\n  }, containerProps, {\n    onClick: function onClick() {\n      selectRef.current.focus();\n    }\n  }), ___EmotionJSX(ChakraSelect, _extends({\n    defaultValue: defaultValue,\n    bg: \"green.50\",\n    border: 0,\n    focusBorderColor: null,\n    paddingLeft: 0,\n    onFocus: handleInputFocus,\n    onBlur: handleInputBlur,\n    ref: selectRef\n  }, rest), children));\n};\n\nexport default ReactSelect;","map":null,"metadata":{},"sourceType":"module"}