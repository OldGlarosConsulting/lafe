{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/matheus/Documents/drive-sync/Projects/endor/packages/web/src/components/Modals/UpdateFuneralsModal/index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useRef } from 'react';\nimport { Button, Flex, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, useToast } from '@chakra-ui/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport Input from '@/components/Input';\nimport getValidationErrors from '@/utils/getValidationErrors';\nimport api from '../../../services/api';\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nvar CreateFuneralsModal = function CreateFuneralsModal(_ref) {\n  _s();\n\n  var isOpen = _ref.isOpen,\n      onClose = _ref.onClose,\n      onSave = _ref.onSave,\n      updatedFuneralId = _ref.updatedFuneralId;\n  var formRef = useRef(null);\n  var toast = useToast();\n  var handleSubmit = useCallback( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data, event) {\n      var _formRef$current, schema, requestBody, _formRef$current2, errors;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors({});\n              schema = Yup.object().shape({\n                name: Yup.string().required('Nome obrigatório'),\n                url_cam: Yup.string().required('Link da camêra obrigatório')\n              });\n              _context.next = 5;\n              return schema.validate(data, {\n                abortEarly: false\n              });\n\n            case 5:\n              requestBody = {\n                id: updatedFuneralId,\n                name: data.name,\n                url_cam: data.url_cam\n              };\n              _context.next = 8;\n              return api.put('funerals', requestBody);\n\n            case 8:\n              toast({\n                status: 'success',\n                title: 'Velório alterado com sucesso',\n                position: 'top',\n                duration: 3000\n              });\n              onClose(event);\n              onSave();\n              _context.next = 20;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](0);\n\n              if (!(_context.t0 instanceof Yup.ValidationError)) {\n                _context.next = 19;\n                break;\n              }\n\n              errors = getValidationErrors(_context.t0);\n              (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setErrors(errors);\n              return _context.abrupt(\"return\");\n\n            case 19:\n              toast({\n                status: 'error',\n                title: 'Erro ao registrar cemitério',\n                description: 'Ocorreu um erro ao registrar cemitério, tente novamente.',\n                position: 'top',\n                duration: 5000\n              });\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 13]]);\n    }));\n\n    return function (_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), []);\n  return ___EmotionJSX(Modal, {\n    isOpen: isOpen,\n    onClose: onClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, ___EmotionJSX(ModalOverlay, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }), ___EmotionJSX(ModalContent, {\n    maxWidth: 900,\n    borderRadius: \"md\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, ___EmotionJSX(ModalHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, \"Alteras dados de vel\\xF3rio\"), ___EmotionJSX(ModalCloseButton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }), ___EmotionJSX(Form, {\n    ref: formRef,\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(ModalBody, {\n    paddingBottom: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(Flex, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(Input, {\n    name: \"name\",\n    placeholder: \"Nome\",\n    containerProps: {\n      border: '1px solid',\n      borderColor: 'gray.400',\n      bg: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }), ___EmotionJSX(Input, {\n    name: \"url_cam\",\n    placeholder: \"Link da cam\\xEAra do vel\\xF3rio\",\n    containerProps: {\n      marginLeft: '16px',\n      border: '1px solid',\n      borderColor: 'gray.400',\n      bg: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }))), ___EmotionJSX(ModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(Button, {\n    variant: \"ghost\",\n    onClick: onClose,\n    marginRight: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, \"Cancelar\"), ___EmotionJSX(Button, {\n    type: \"submit\",\n    variantColor: \"green\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, \"Salvar\")))));\n};\n\n_s(CreateFuneralsModal, \"NW0mLTQlg44UBMWD0hZFKr2LzKQ=\", false, function () {\n  return [useToast];\n});\n\n_c = CreateFuneralsModal;\nexport default CreateFuneralsModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateFuneralsModal\");","map":{"version":3,"sources":["/home/matheus/Documents/drive-sync/Projects/endor/packages/web/src/components/Modals/UpdateFuneralsModal/index.tsx"],"names":["React","useCallback","useRef","Button","Flex","Modal","ModalBody","ModalCloseButton","ModalContent","ModalFooter","ModalHeader","ModalOverlay","useToast","Form","Yup","Input","getValidationErrors","api","CreateFuneralsModal","isOpen","onClose","onSave","updatedFuneralId","formRef","toast","handleSubmit","data","event","current","setErrors","schema","object","shape","name","string","required","url_cam","validate","abortEarly","requestBody","id","put","status","title","position","duration","ValidationError","errors","description","border","borderColor","bg","marginLeft"],"mappings":"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","sourcesContent":["import React, { useCallback, useRef } from 'react';\n\nimport {\n  Button,\n  Flex,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  useToast,\n} from '@chakra-ui/core';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\n\nimport Input from '@/components/Input';\nimport getValidationErrors from '@/utils/getValidationErrors';\n\nimport api from '../../../services/api';\n\ninterface IFormData {\n  name: string;\n  url_cam: string;\n}\n\ninterface IDataRequestBody {\n  id: string;\n  name: string;\n  url_cam: string;\n}\n\ninterface ICreateFuneralsModalProps {\n  isOpen: boolean;\n  onClose?: (\n    event: React.MouseEvent | React.KeyboardEvent,\n    reason?: 'pressedEscape' | 'clickedOverlay',\n  ) => void;\n  onSave: () => void;\n  updatedFuneralId: string;\n}\n\nconst CreateFuneralsModal: React.FC<ICreateFuneralsModalProps> = ({\n  isOpen,\n  onClose,\n  onSave,\n  updatedFuneralId,\n}) => {\n  const formRef = useRef<FormHandles>(null);\n\n  const toast = useToast();\n\n  const handleSubmit = useCallback(async (data: IFormData, event) => {\n    try {\n      formRef.current?.setErrors({});\n\n      const schema = Yup.object().shape({\n        name: Yup.string().required('Nome obrigatório'),\n        url_cam: Yup.string().required('Link da camêra obrigatório'),\n      });\n\n      await schema.validate(data, { abortEarly: false });\n\n      const requestBody: IDataRequestBody = {\n        id: updatedFuneralId,\n        name: data.name,\n        url_cam: data.url_cam,\n      };\n\n      await api.put('funerals', requestBody);\n\n      toast({\n        status: 'success',\n        title: 'Velório alterado com sucesso',\n        position: 'top',\n        duration: 3000,\n      });\n\n      onClose(event);\n      onSave();\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        const errors = getValidationErrors(err);\n\n        formRef.current?.setErrors(errors);\n\n        return;\n      }\n\n      toast({\n        status: 'error',\n        title: 'Erro ao registrar cemitério',\n        description: 'Ocorreu um erro ao registrar cemitério, tente novamente.',\n        position: 'top',\n        duration: 5000,\n      });\n    }\n  }, []);\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n\n      <ModalContent maxWidth={900} borderRadius=\"md\">\n        <ModalHeader>Alteras dados de velório</ModalHeader>\n        <ModalCloseButton />\n\n        <Form ref={formRef} onSubmit={handleSubmit}>\n          <ModalBody paddingBottom={4}>\n            <Flex>\n              <Input\n                name=\"name\"\n                placeholder=\"Nome\"\n                containerProps={{\n                  border: '1px solid',\n                  borderColor: 'gray.400',\n                  bg: 'white',\n                }}\n              />\n              <Input\n                name=\"url_cam\"\n                placeholder=\"Link da camêra do velório\"\n                containerProps={{\n                  marginLeft: '16px',\n                  border: '1px solid',\n                  borderColor: 'gray.400',\n                  bg: 'white',\n                }}\n              />\n            </Flex>\n          </ModalBody>\n\n          <ModalFooter>\n            <Button variant=\"ghost\" onClick={onClose} marginRight={4}>\n              Cancelar\n            </Button>\n\n            <Button type=\"submit\" variantColor=\"green\">\n              Salvar\n            </Button>\n          </ModalFooter>\n        </Form>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default CreateFuneralsModal;\n"]},"metadata":{},"sourceType":"module"}