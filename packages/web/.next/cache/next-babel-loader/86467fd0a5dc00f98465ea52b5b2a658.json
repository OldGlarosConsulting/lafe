{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/matheus/Documents/drive-sync/Projects/endor/packages/web/src/components/Modals/CreateEmployeesModal/index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useRef, useState } from 'react';\nimport { Button, Checkbox, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, useToast } from '@chakra-ui/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport Input from '@/components/Input';\nimport getValidationErrors from '@/utils/getValidationErrors';\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nvar CreateEmpployeesModal = function CreateEmpployeesModal(_ref) {\n  _s();\n\n  var isOpen = _ref.isOpen,\n      onClose = _ref.onClose,\n      onSave = _ref.onSave;\n  var formRef = useRef(null);\n  var toast = useToast();\n\n  var _useState = useState(false),\n      admRole = _useState[0],\n      setAdmRole = _useState[1];\n\n  var handleSubmit = useCallback( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data, event) {\n      var _formRef$current, schema, _formRef$current2, errors;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors({});\n              schema = Yup.object().shape({\n                name: Yup.string().required('Nome obrigatório'),\n                email: Yup.string().email().required('E-mail obrigatória'),\n                password: Yup.string().required('Senha obrigatório'),\n                passwordConfirmation: Yup.string().oneOf([Yup.ref('password'), null], 'As senhas devem ser iguais')\n              });\n              _context.next = 5;\n              return schema.validate(data, {\n                abortEarly: false\n              });\n\n            case 5:\n              // await api.post('employees', {\n              //   name: data.name,\n              //   email: data.email,\n              //   password: data.password,\n              // });\n              console.log(admRole);\n              toast({\n                status: 'success',\n                title: 'Funcionário registrado com sucesso!',\n                position: 'top',\n                duration: 3000\n              });\n              onClose(event);\n              onSave();\n              _context.next = 18;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n\n              if (!(_context.t0 instanceof Yup.ValidationError)) {\n                _context.next = 17;\n                break;\n              }\n\n              errors = getValidationErrors(_context.t0);\n              (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setErrors(errors);\n              return _context.abrupt(\"return\");\n\n            case 17:\n              toast({\n                status: 'error',\n                title: 'Erro no registro do funcionário',\n                description: 'Ocorreu um erro ao tentar registrar o funcionário, tente novamente.',\n                position: 'top',\n                duration: 5000\n              });\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 11]]);\n    }));\n\n    return function (_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), [admRole]);\n  return ___EmotionJSX(Modal, {\n    isOpen: isOpen,\n    onClose: onClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, ___EmotionJSX(ModalOverlay, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }), ___EmotionJSX(ModalContent, {\n    borderRadius: \"md\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, ___EmotionJSX(ModalHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, \"Registrar funcion\\xE1rio\"), ___EmotionJSX(ModalCloseButton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }), ___EmotionJSX(Form, {\n    ref: formRef,\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(ModalBody, {\n    paddingBottom: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(Input, {\n    name: \"name\",\n    placeholder: \"Nome\",\n    containerProps: {\n      border: '1px solid',\n      borderColor: 'gray.400',\n      bg: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }), ___EmotionJSX(Input, {\n    name: \"email\",\n    placeholder: \"E-mail\",\n    containerProps: {\n      border: '1px solid',\n      borderColor: 'gray.400',\n      bg: 'white',\n      marginTop: 3\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }), ___EmotionJSX(Input, {\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"Senha\",\n    containerProps: {\n      border: '1px solid',\n      borderColor: 'gray.400',\n      bg: 'white',\n      marginTop: 3\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }), ___EmotionJSX(Input, {\n    name: \"passwordConfirmation\",\n    type: \"password\",\n    placeholder: \"Confirme a senha do funcion\\xE1rio\",\n    containerProps: {\n      border: '1px solid',\n      borderColor: 'gray.400',\n      bg: 'white',\n      marginTop: 3\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  })), ___EmotionJSX(ModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(Checkbox, {\n    color: \"green\",\n    onChange: function onChange(event) {\n      setAdmRole(event.target.checked);\n      console.log(admRole);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, \"Administrador\"), ___EmotionJSX(Button, {\n    variant: \"ghost\",\n    onClick: onClose,\n    marginRight: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, \"Cancelar\"), ___EmotionJSX(Button, {\n    type: \"submit\",\n    variantColor: \"green\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, \"Confirmar\")))));\n};\n\n_s(CreateEmpployeesModal, \"H/opFfNZ8QjmpqzPbpD1K8s6tII=\", false, function () {\n  return [useToast];\n});\n\n_c = CreateEmpployeesModal;\nexport default CreateEmpployeesModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateEmpployeesModal\");","map":{"version":3,"sources":["/home/matheus/Documents/drive-sync/Projects/endor/packages/web/src/components/Modals/CreateEmployeesModal/index.tsx"],"names":["React","useCallback","useRef","useState","Button","Checkbox","Modal","ModalBody","ModalCloseButton","ModalContent","ModalFooter","ModalHeader","ModalOverlay","useToast","Form","Yup","Input","getValidationErrors","CreateEmpployeesModal","isOpen","onClose","onSave","formRef","toast","admRole","setAdmRole","handleSubmit","data","event","current","setErrors","schema","object","shape","name","string","required","email","password","passwordConfirmation","oneOf","ref","validate","abortEarly","console","log","status","title","position","duration","ValidationError","errors","description","border","borderColor","bg","marginTop","target","checked"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, useCallback, useRef, useState } from 'react';\n\nimport {\n  Button,\n  Checkbox,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  useToast,\n} from '@chakra-ui/core';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\n\nimport Input from '@/components/Input';\nimport getValidationErrors from '@/utils/getValidationErrors';\n\nimport api from '../../../services/api';\n\ninterface IFormData {\n  name: string;\n  email: string;\n  password: string;\n  passwordConfirmation: string;\n}\n\ninterface ICreateEmpployeesModalProps {\n  isOpen: boolean;\n  onClose?: (\n    event: React.MouseEvent | React.KeyboardEvent,\n    reason?: 'pressedEscape' | 'clickedOverlay',\n  ) => void;\n  onSave: () => void;\n}\n\nconst CreateEmpployeesModal: React.FC<ICreateEmpployeesModalProps> = ({\n  isOpen,\n  onClose,\n  onSave,\n}) => {\n  const formRef = useRef<FormHandles>(null);\n\n  const toast = useToast();\n\n  const [admRole, setAdmRole] = useState<boolean>(false);\n\n  const handleSubmit = useCallback(\n    async (data: IFormData, event) => {\n      try {\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          name: Yup.string().required('Nome obrigatório'),\n          email: Yup.string().email().required('E-mail obrigatória'),\n          password: Yup.string().required('Senha obrigatório'),\n          passwordConfirmation: Yup.string().oneOf(\n            [Yup.ref('password'), null],\n            'As senhas devem ser iguais',\n          ),\n        });\n\n        await schema.validate(data, { abortEarly: false });\n\n        // await api.post('employees', {\n        //   name: data.name,\n        //   email: data.email,\n        //   password: data.password,\n        // });\n\n        console.log(admRole);\n\n        toast({\n          status: 'success',\n          title: 'Funcionário registrado com sucesso!',\n          position: 'top',\n          duration: 3000,\n        });\n\n        onClose(event);\n        onSave();\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n\n          formRef.current?.setErrors(errors);\n\n          return;\n        }\n\n        toast({\n          status: 'error',\n          title: 'Erro no registro do funcionário',\n          description:\n            'Ocorreu um erro ao tentar registrar o funcionário, tente novamente.',\n          position: 'top',\n          duration: 5000,\n        });\n      }\n    },\n    [admRole],\n  );\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n\n      <ModalContent borderRadius=\"md\">\n        <ModalHeader>Registrar funcionário</ModalHeader>\n        <ModalCloseButton />\n\n        <Form ref={formRef} onSubmit={handleSubmit}>\n          <ModalBody paddingBottom={4}>\n            <Input\n              name=\"name\"\n              placeholder=\"Nome\"\n              containerProps={{\n                border: '1px solid',\n                borderColor: 'gray.400',\n                bg: 'white',\n              }}\n            />\n\n            <Input\n              name=\"email\"\n              placeholder=\"E-mail\"\n              containerProps={{\n                border: '1px solid',\n                borderColor: 'gray.400',\n                bg: 'white',\n                marginTop: 3,\n              }}\n            />\n\n            <Input\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Senha\"\n              containerProps={{\n                border: '1px solid',\n                borderColor: 'gray.400',\n                bg: 'white',\n                marginTop: 3,\n              }}\n            />\n\n            <Input\n              name=\"passwordConfirmation\"\n              type=\"password\"\n              placeholder=\"Confirme a senha do funcionário\"\n              containerProps={{\n                border: '1px solid',\n                borderColor: 'gray.400',\n                bg: 'white',\n                marginTop: 3,\n              }}\n            />\n          </ModalBody>\n\n          <ModalFooter>\n            <Checkbox\n              color=\"green\"\n              onChange={(event: ChangeEvent<HTMLInputElement>) => {\n                setAdmRole(event.target.checked);\n                console.log(admRole);\n              }}\n            >\n              Administrador\n            </Checkbox>\n            <Button variant=\"ghost\" onClick={onClose} marginRight={4}>\n              Cancelar\n            </Button>\n\n            <Button type=\"submit\" variantColor=\"green\">\n              Confirmar\n            </Button>\n          </ModalFooter>\n        </Form>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default CreateEmpployeesModal;\n"]},"metadata":{},"sourceType":"module"}