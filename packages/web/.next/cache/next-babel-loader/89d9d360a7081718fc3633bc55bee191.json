{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/home/matheus/Documents/drive-sync/Projects/endor/packages/web/src/components/DatePicker/index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef, useState } from 'react';\nimport ReactDatePicker from 'react-datepicker';\nimport { useField } from '@unform/core';\nimport { Container } from './styles';\nimport formatWeekDay from './utils/formatWeekDay';\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nvar DatePicker = function DatePicker(_ref) {\n  _s();\n\n  var name = _ref.name,\n      containerProps = _ref.containerProps,\n      rest = _objectWithoutProperties(_ref, [\"name\", \"containerProps\"]);\n\n  var datePickerRef = useRef(null);\n\n  var _useField = useField(name),\n      fieldName = _useField.fieldName,\n      defaultValue = _useField.defaultValue,\n      error = _useField.error,\n      registerField = _useField.registerField;\n\n  var _useState = useState(defaultValue),\n      selected = _useState[0],\n      setSelected = _useState[1];\n\n  useEffect(function () {\n    registerField({\n      name: fieldName,\n      ref: datePickerRef.current,\n      path: 'props.selected'\n    });\n  }, [fieldName, registerField]);\n  return ___EmotionJSX(Container, _extends({\n    borderRadius: \"md\",\n    isErrored: !!error\n  }, containerProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }), ___EmotionJSX(ReactDatePicker, _extends({\n    ref: datePickerRef,\n    selected: selected,\n    showPopperArrow: false,\n    dateFormat: \"dd/MM/yyyy\",\n    formatWeekDay: formatWeekDay,\n    placeholderText: \"Data\",\n    onChange: function onChange(date) {\n      setSelected(date);\n    }\n  }, rest, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  })));\n};\n\n_s(DatePicker, \"1TekR3HaaVb7pYRpO7vn+B7HTuo=\", false, function () {\n  return [useField];\n});\n\n_c = DatePicker;\nexport default DatePicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"DatePicker\");","map":{"version":3,"sources":["/home/matheus/Documents/drive-sync/Projects/endor/packages/web/src/components/DatePicker/index.tsx"],"names":["React","useEffect","useRef","useState","ReactDatePicker","useField","Container","formatWeekDay","DatePicker","name","containerProps","rest","datePickerRef","fieldName","defaultValue","error","registerField","selected","setSelected","ref","current","path","date"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,eAAP,MAAsD,kBAAtD;AAGA,SAASC,QAAT,QAAyB,cAAzB;AAEA,SAASC,SAAT,QAA0B,UAA1B;AACA,OAAOC,aAAP,MAA0B,uBAA1B;;;AAWA,IAAMC,UAAsC,GAAG,SAAzCA,UAAyC,OAIzC;AAAA;;AAAA,MAHJC,IAGI,QAHJA,IAGI;AAAA,MAFJC,cAEI,QAFJA,cAEI;AAAA,MADDC,IACC;;AACJ,MAAMC,aAAa,GAAGV,MAAM,CAAkB,IAAlB,CAA5B;;AADI,kBAGsDG,QAAQ,CAACI,IAAD,CAH9D;AAAA,MAGII,SAHJ,aAGIA,SAHJ;AAAA,MAGeC,YAHf,aAGeA,YAHf;AAAA,MAG6BC,KAH7B,aAG6BA,KAH7B;AAAA,MAGoCC,aAHpC,aAGoCA,aAHpC;;AAAA,kBAK4Bb,QAAQ,CAACW,YAAD,CALpC;AAAA,MAKGG,QALH;AAAA,MAKaC,WALb;;AAOJjB,EAAAA,SAAS,CAAC,YAAM;AACde,IAAAA,aAAa,CAAC;AACZP,MAAAA,IAAI,EAAEI,SADM;AAEZM,MAAAA,GAAG,EAAEP,aAAa,CAACQ,OAFP;AAGZC,MAAAA,IAAI,EAAE;AAHM,KAAD,CAAb;AAKD,GANQ,EAMN,CAACR,SAAD,EAAYG,aAAZ,CANM,CAAT;AAQA,SACE,cAAC,SAAD;AAAW,IAAA,YAAY,EAAC,IAAxB;AAA6B,IAAA,SAAS,EAAE,CAAC,CAACD;AAA1C,KAAqDL,cAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,cAAC,eAAD;AACE,IAAA,GAAG,EAAEE,aADP;AAEE,IAAA,QAAQ,EAAEK,QAFZ;AAGE,IAAA,eAAe,EAAE,KAHnB;AAIE,IAAA,UAAU,EAAC,YAJb;AAKE,IAAA,aAAa,EAAEV,aALjB;AAME,IAAA,eAAe,EAAC,MANlB;AAOE,IAAA,QAAQ,EAAE,kBAAAe,IAAI,EAAI;AAChBJ,MAAAA,WAAW,CAACI,IAAD,CAAX;AACD;AATH,KAUMX,IAVN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF;AAgBD,CAnCD;;GAAMH,U;UAOsDH,Q;;;KAPtDG,U;AAqCN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport ReactDatePicker, { ReactDatePickerProps } from 'react-datepicker';\n\nimport { PseudoBoxProps as ChakraPseudoBoxProps } from '@chakra-ui/core';\nimport { useField } from '@unform/core';\n\nimport { Container } from './styles';\nimport formatWeekDay from './utils/formatWeekDay';\n\ninterface IDatePickerProps extends Omit<ReactDatePickerProps, 'onChange'> {\n  name: string;\n  onChange?: (\n    date: Date | [Date, Date] | null,\n    event: React.SyntheticEvent<any> | undefined,\n  ) => void;\n  containerProps?: ChakraPseudoBoxProps;\n}\n\nconst DatePicker: React.FC<IDatePickerProps> = ({\n  name,\n  containerProps,\n  ...rest\n}) => {\n  const datePickerRef = useRef<ReactDatePicker>(null);\n\n  const { fieldName, defaultValue, error, registerField } = useField(name);\n\n  const [selected, setSelected] = useState(defaultValue);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: datePickerRef.current,\n      path: 'props.selected',\n    });\n  }, [fieldName, registerField]);\n\n  return (\n    <Container borderRadius=\"md\" isErrored={!!error} {...containerProps}>\n      <ReactDatePicker\n        ref={datePickerRef}\n        selected={selected}\n        showPopperArrow={false}\n        dateFormat=\"dd/MM/yyyy\"\n        formatWeekDay={formatWeekDay}\n        placeholderText=\"Data\"\n        onChange={date => {\n          setSelected(date);\n        }}\n        {...rest}\n      />\n    </Container>\n  );\n};\n\nexport default DatePicker;\n"]},"metadata":{},"sourceType":"module"}