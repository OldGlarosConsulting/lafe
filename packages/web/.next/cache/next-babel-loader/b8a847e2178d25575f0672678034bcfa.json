{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/home/matheus/Documents/drive-sync/Projects/lafe/packages/web/src/components/Table/index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useMemo } from 'react';\nimport { FiChevronDown, FiChevronLeft, FiChevronRight, FiChevronsLeft, FiChevronsRight, FiChevronUp } from 'react-icons/fi';\nimport { useMediaQuery } from 'react-responsive';\nimport { usePagination, useSortBy, useTable } from 'react-table';\nimport { Flex, Text } from '@chakra-ui/core';\nimport Card from './Card';\nimport BottomSection from './Card/CardFooter';\nimport TopSection from './Card/CardHeader/index';\nimport { StyledTable, TableCell, TableHead, TableIconButton, TableRow } from './styles';\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nvar Table = function Table(_ref) {\n  _s();\n\n  var heading = _ref.heading,\n      columns = _ref.columns,\n      data = _ref.data,\n      _ref$pageSize = _ref.pageSize,\n      initialPageSize = _ref$pageSize === void 0 ? 5 : _ref$pageSize,\n      onRowClick = _ref.onRowClick,\n      rest = _objectWithoutProperties(_ref, [\"heading\", \"columns\", \"data\", \"pageSize\", \"onRowClick\"]);\n\n  var tableColumns = useMemo(function () {\n    return columns;\n  }, [columns]);\n  var isTabletOrMobile = useMediaQuery({\n    query: '(max-width: 40em)'\n  });\n\n  var _ref2 = useTable({\n    columns: tableColumns,\n    data: data,\n    initialState: {\n      pageIndex: 0,\n      pageSize: initialPageSize\n    }\n  }, useSortBy, usePagination),\n      getTableProps = _ref2.getTableProps,\n      headerGroups = _ref2.headerGroups,\n      prepareRow = _ref2.prepareRow,\n      page = _ref2.page,\n      canPreviousPage = _ref2.canPreviousPage,\n      canNextPage = _ref2.canNextPage,\n      pageOptions = _ref2.pageOptions,\n      pageCount = _ref2.pageCount,\n      gotoPage = _ref2.gotoPage,\n      nextPage = _ref2.nextPage,\n      previousPage = _ref2.previousPage,\n      setPageSize = _ref2.setPageSize,\n      _ref2$state = _ref2.state,\n      pageIndex = _ref2$state.pageIndex,\n      pageSize = _ref2$state.pageSize;\n\n  return ___EmotionJSX(Card, _extends({\n    flexDirection: \"column\",\n    flex: 1,\n    maxWidth: \"100%\",\n    width: \"100%\"\n  }, rest, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }), heading && ___EmotionJSX(TopSection, {\n    alignItems: \"center\",\n    fontWeight: \"bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, heading), ___EmotionJSX(StyledTable, _extends({}, getTableProps(), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), ___EmotionJSX(TableHead, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, headerGroups.map(function (headerGroup) {\n    return ___EmotionJSX(Flex, _extends({\n      key: headerGroup.id,\n      flex: 1,\n      flexDirection: \"row\"\n    }, headerGroup.getHeaderGroupProps(), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }), headerGroup.headers.map(function (column) {\n      return ___EmotionJSX(TableCell, _extends({\n        p: 4,\n        width: column.width,\n        key: column.id,\n        bg: \"gray.500\",\n        justifyContent: \"space-between\"\n      }, column.getHeaderProps(), column.getSortByToggleProps(), {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }\n      }), ___EmotionJSX(Text, {\n        fontWeight: \"bold\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 19\n        }\n      }, column.render('Header')), function () {\n        if (column.isSorted) {\n          if (column.isSortedDesc) {\n            return ___EmotionJSX(FiChevronDown, {\n              size: 20,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 32\n              }\n            });\n          }\n\n          return ___EmotionJSX(FiChevronUp, {\n            size: 20,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 30\n            }\n          });\n        }\n\n        return '';\n      }());\n    }));\n  })), ___EmotionJSX(Flex, {\n    flexDirection: \"column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, page.map(function (row, key) {\n    prepareRow(row);\n    return ___EmotionJSX(TableRow, _extends({\n      onClick: function onClick() {\n        return onRowClick && onRowClick(row);\n      },\n      key: key // eslint-disable-line\n      ,\n      flexDirection: \"row\"\n    }, row.getRowProps(), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }), row.cells.map(function (cell) {\n      return ___EmotionJSX(TableCell, _extends({\n        key: cell.row.index,\n        justifyContent: \"flex-start\",\n        p: 4\n      }, cell.getCellProps(), {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 19\n        }\n      }), cell.render('Cell'));\n    }));\n  }))), ___EmotionJSX(BottomSection, {\n    justifyContent: \"space-between\",\n    flexDirection: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, ___EmotionJSX(Flex, {\n    flexDirection: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(TableIconButton, {\n    mr: 2,\n    onClick: function onClick() {\n      return gotoPage(0);\n    },\n    isDisabled: !canPreviousPage,\n    icon: function icon() {\n      return ___EmotionJSX(FiChevronsLeft, {\n        size: 20,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }), ___EmotionJSX(TableIconButton, {\n    mr: 2,\n    isDisabled: !canPreviousPage,\n    onClick: function onClick() {\n      return previousPage();\n    },\n    icon: function icon() {\n      return ___EmotionJSX(FiChevronLeft, {\n        size: 20,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  })), ___EmotionJSX(Flex, {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Text, {\n    mr: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, \"P\\xE1gina\", ' ', ___EmotionJSX(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, pageIndex + 1, \" de\", pageOptions.length)), !isTabletOrMobile && ___EmotionJSX(\"select\", {\n    value: pageSize,\n    onChange: function onChange(e) {\n      setPageSize(Number(e.target.value));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, [5, 10, 20, 30, 40, 50].map(function (size) {\n    return ___EmotionJSX(\"option\", {\n      key: size,\n      value: size,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }\n    }, size, \" linhas\");\n  }))), ___EmotionJSX(Flex, {\n    flexDirection: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(TableIconButton, {\n    ml: 2,\n    isDisabled: !canNextPage,\n    onClick: function onClick() {\n      return nextPage();\n    },\n    icon: function icon() {\n      return ___EmotionJSX(FiChevronRight, {\n        size: 20,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 25\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }), ___EmotionJSX(TableIconButton, {\n    ml: 2,\n    onClick: function onClick() {\n      return gotoPage(pageCount ? pageCount - 1 : 1);\n    },\n    isDisabled: !canNextPage,\n    icon: function icon() {\n      return ___EmotionJSX(FiChevronsRight, {\n        size: 20,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s(Table, \"ni3lv/Ms0Xd87f/uhaP+k08r+TE=\", false, function () {\n  return [useMediaQuery, useTable];\n});\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/home/matheus/Documents/drive-sync/Projects/lafe/packages/web/src/components/Table/index.tsx"],"names":["React","useMemo","FiChevronDown","FiChevronLeft","FiChevronRight","FiChevronsLeft","FiChevronsRight","FiChevronUp","useMediaQuery","usePagination","useSortBy","useTable","Flex","Text","Card","BottomSection","TopSection","StyledTable","TableCell","TableHead","TableIconButton","TableRow","Table","heading","columns","data","pageSize","initialPageSize","onRowClick","rest","tableColumns","isTabletOrMobile","query","initialState","pageIndex","getTableProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","map","headerGroup","id","getHeaderGroupProps","headers","column","width","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","key","getRowProps","cells","cell","index","getCellProps","length","e","Number","target","value","size"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SACEC,aADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,cAJF,EAKEC,eALF,EAMEC,WANF,QAOO,gBAPP;AAQA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAAsBC,aAAtB,EAAqCC,SAArC,EAAgDC,QAAhD,QAAgE,aAAhE;AAEA,SAAmBC,IAAnB,EAAyBC,IAAzB,QAAqC,iBAArC;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,aAAP,MAA0B,mBAA1B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SACEC,WADF,EAEEC,SAFF,EAGEC,SAHF,EAIEC,eAJF,EAKEC,QALF,QAMO,UANP;;;AAgBA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAOQ;AAAA;;AAAA,MANpBC,OAMoB,QANpBA,OAMoB;AAAA,MALpBC,OAKoB,QALpBA,OAKoB;AAAA,MAJpBC,IAIoB,QAJpBA,IAIoB;AAAA,2BAHpBC,QAGoB;AAAA,MAHVC,eAGU,8BAHQ,CAGR;AAAA,MAFpBC,UAEoB,QAFpBA,UAEoB;AAAA,MADjBC,IACiB;;AACpB,MAAMC,YAAY,GAAG7B,OAAO,CAAC;AAAA,WAAMuB,OAAN;AAAA,GAAD,EAAgB,CAACA,OAAD,CAAhB,CAA5B;AAEA,MAAMO,gBAAgB,GAAGvB,aAAa,CAAC;AAAEwB,IAAAA,KAAK,EAAE;AAAT,GAAD,CAAtC;;AAHoB,cAmBhBrB,QAAQ,CACV;AACEa,IAAAA,OAAO,EAAEM,YADX;AAEEL,IAAAA,IAAI,EAAJA,IAFF;AAGEQ,IAAAA,YAAY,EAAE;AACZC,MAAAA,SAAS,EAAE,CADC;AAEZR,MAAAA,QAAQ,EAAEC;AAFE;AAHhB,GADU,EASVjB,SATU,EAUVD,aAVU,CAnBQ;AAAA,MAMlB0B,aANkB,SAMlBA,aANkB;AAAA,MAOlBC,YAPkB,SAOlBA,YAPkB;AAAA,MAQlBC,UARkB,SAQlBA,UARkB;AAAA,MASlBC,IATkB,SASlBA,IATkB;AAAA,MAUlBC,eAVkB,SAUlBA,eAVkB;AAAA,MAWlBC,WAXkB,SAWlBA,WAXkB;AAAA,MAYlBC,WAZkB,SAYlBA,WAZkB;AAAA,MAalBC,SAbkB,SAalBA,SAbkB;AAAA,MAclBC,QAdkB,SAclBA,QAdkB;AAAA,MAelBC,QAfkB,SAelBA,QAfkB;AAAA,MAgBlBC,YAhBkB,SAgBlBA,YAhBkB;AAAA,MAiBlBC,WAjBkB,SAiBlBA,WAjBkB;AAAA,0BAkBlBC,KAlBkB;AAAA,MAkBTb,SAlBS,eAkBTA,SAlBS;AAAA,MAkBER,QAlBF,eAkBEA,QAlBF;;AAgCpB,SACE,cAAC,IAAD;AACE,IAAA,aAAa,EAAC,QADhB;AAEE,IAAA,IAAI,EAAE,CAFR;AAGE,IAAA,QAAQ,EAAC,MAHX;AAIE,IAAA,KAAK,EAAC;AAJR,KAKMG,IALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOGN,OAAO,IACN,cAAC,UAAD;AAAY,IAAA,UAAU,EAAC,QAAvB;AAAgC,IAAA,UAAU,EAAC,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OADH,CARJ,EAaE,cAAC,WAAD,eAAiBY,aAAa,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,cAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,YAAY,CAACY,GAAb,CAAiB,UAAAC,WAAW;AAAA,WAC3B,cAAC,IAAD;AACE,MAAA,GAAG,EAAEA,WAAW,CAACC,EADnB;AAEE,MAAA,IAAI,EAAE,CAFR;AAGE,MAAA,aAAa,EAAC;AAHhB,OAIMD,WAAW,CAACE,mBAAZ,EAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMGF,WAAW,CAACG,OAAZ,CAAoBJ,GAApB,CAAwB,UAAAK,MAAM;AAAA,aAC7B,cAAC,SAAD;AACE,QAAA,CAAC,EAAE,CADL;AAEE,QAAA,KAAK,EAAEA,MAAM,CAACC,KAFhB;AAGE,QAAA,GAAG,EAAED,MAAM,CAACH,EAHd;AAIE,QAAA,EAAE,EAAC,UAJL;AAKE,QAAA,cAAc,EAAC;AALjB,SAMMG,MAAM,CAACE,cAAP,EANN,EAOMF,MAAM,CAACG,oBAAP,EAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UASE,cAAC,IAAD;AAAM,QAAA,UAAU,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyBH,MAAM,CAACI,MAAP,CAAc,QAAd,CAAzB,CATF,EAWI,YAAM;AACN,YAAIJ,MAAM,CAACK,QAAX,EAAqB;AACnB,cAAIL,MAAM,CAACM,YAAX,EAAyB;AACvB,mBAAO,cAAC,aAAD;AAAe,cAAA,IAAI,EAAE,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AAED,iBAAO,cAAC,WAAD;AAAa,YAAA,IAAI,EAAE,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,eAAO,EAAP;AACD,OAVA,EAXH,CAD6B;AAAA,KAA9B,CANH,CAD2B;AAAA,GAA5B,CADH,CADF,EAsCE,cAAC,IAAD;AAAM,IAAA,aAAa,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGrB,IAAI,CAACU,GAAL,CAAS,UAACY,GAAD,EAAMC,GAAN,EAAc;AACtBxB,IAAAA,UAAU,CAACuB,GAAD,CAAV;AAEA,WACE,cAAC,QAAD;AACE,MAAA,OAAO,EAAE;AAAA,eAAMhC,UAAU,IAAIA,UAAU,CAACgC,GAAD,CAA9B;AAAA,OADX;AAEI,MAAA,GAAG,EAAEC,GAFT,CAEc;AAFd;AAGE,MAAA,aAAa,EAAC;AAHhB,OAIMD,GAAG,CAACE,WAAJ,EAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMGF,GAAG,CAACG,KAAJ,CAAUf,GAAV,CAAc,UAAAgB,IAAI;AAAA,aACjB,cAAC,SAAD;AACE,QAAA,GAAG,EAAEA,IAAI,CAACJ,GAAL,CAASK,KADhB;AAEE,QAAA,cAAc,EAAC,YAFjB;AAGE,QAAA,CAAC,EAAE;AAHL,SAIMD,IAAI,CAACE,YAAL,EAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAMGF,IAAI,CAACP,MAAL,CAAY,MAAZ,CANH,CADiB;AAAA,KAAlB,CANH,CADF;AAmBD,GAtBA,CADH,CAtCF,CAbF,EA8EE,cAAC,aAAD;AAAe,IAAA,cAAc,EAAC,eAA9B;AAA8C,IAAA,aAAa,EAAC,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,cAAC,IAAD;AAAM,IAAA,aAAa,EAAC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,cAAC,eAAD;AACE,IAAA,EAAE,EAAE,CADN;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMd,QAAQ,CAAC,CAAD,CAAd;AAAA,KAFX;AAGE,IAAA,UAAU,EAAE,CAACJ,eAHf;AAIE,IAAA,IAAI,EAAE;AAAA,aAAM,cAAC,cAAD;AAAgB,QAAA,IAAI,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN;AAAA,KAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,cAAC,eAAD;AACE,IAAA,EAAE,EAAE,CADN;AAEE,IAAA,UAAU,EAAE,CAACA,eAFf;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMM,YAAY,EAAlB;AAAA,KAHX;AAIE,IAAA,IAAI,EAAE;AAAA,aAAM,cAAC,aAAD;AAAe,QAAA,IAAI,EAAE,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN;AAAA,KAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,EAiBE,cAAC,IAAD;AAAM,IAAA,cAAc,EAAC,QAArB;AAA8B,IAAA,UAAU,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,cAAC,IAAD;AAAM,IAAA,EAAE,EAAE,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACS,GADT,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,SAAS,GAAG,CADf,SAEGO,WAAW,CAAC0B,MAFf,CAFF,CADF,EASG,CAACpC,gBAAD,IACC;AACE,IAAA,KAAK,EAAEL,QADT;AAEE,IAAA,QAAQ,EAAE,kBAAA0C,CAAC,EAAI;AACbtB,MAAAA,WAAW,CAACuB,MAAM,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAP,CAAX;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMG,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,EAAwBvB,GAAxB,CAA4B,UAAAwB,IAAI;AAAA,WAC/B;AAAQ,MAAA,GAAG,EAAEA,IAAb;AAAmB,MAAA,KAAK,EAAEA,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,IADH,YAD+B;AAAA,GAAhC,CANH,CAVJ,CAjBF,EA0CE,cAAC,IAAD;AAAM,IAAA,aAAa,EAAC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,cAAC,eAAD;AACE,IAAA,EAAE,EAAE,CADN;AAEE,IAAA,UAAU,EAAE,CAAChC,WAFf;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMI,QAAQ,EAAd;AAAA,KAHX;AAIE,IAAA,IAAI,EAAE;AAAA,aAAM,cAAC,cAAD;AAAgB,QAAA,IAAI,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN;AAAA,KAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,cAAC,eAAD;AACE,IAAA,EAAE,EAAE,CADN;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMD,QAAQ,CAACD,SAAS,GAAGA,SAAS,GAAG,CAAf,GAAmB,CAA7B,CAAd;AAAA,KAFX;AAGE,IAAA,UAAU,EAAE,CAACF,WAHf;AAIE,IAAA,IAAI,EAAE;AAAA,aAAM,cAAC,eAAD;AAAiB,QAAA,IAAI,EAAE,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN;AAAA,KAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CA1CF,CA9EF,CADF;AA2ID,CAlLD;;GAAMlB,K;UAUqBd,a,EAgBrBG,Q;;;KA1BAW,K;AAoLN,eAAeA,KAAf","sourcesContent":["import React, { useMemo } from 'react';\nimport {\n  FiChevronDown,\n  FiChevronLeft,\n  FiChevronRight,\n  FiChevronsLeft,\n  FiChevronsRight,\n  FiChevronUp,\n} from 'react-icons/fi';\nimport { useMediaQuery } from 'react-responsive';\nimport { Column, Row, usePagination, useSortBy, useTable } from 'react-table';\n\nimport { BoxProps, Flex, Text } from '@chakra-ui/core';\n\nimport Card from './Card';\nimport BottomSection from './Card/CardFooter';\nimport TopSection from './Card/CardHeader/index';\nimport {\n  StyledTable,\n  TableCell,\n  TableHead,\n  TableIconButton,\n  TableRow,\n} from './styles';\n\ninterface ITableProps<T extends object> extends BoxProps {\n  heading?: React.ReactNode;\n  columns: Column<T>[];\n  data: any;\n  pageSize?: number;\n  onRowClick?: (row: Row<T>) => void;\n}\n\nconst Table = <T extends object>({\n  heading,\n  columns,\n  data,\n  pageSize: initialPageSize = 5,\n  onRowClick,\n  ...rest\n}: ITableProps<T>) => {\n  const tableColumns = useMemo(() => columns, [columns]);\n\n  const isTabletOrMobile = useMediaQuery({ query: '(max-width: 40em)' });\n\n  const {\n    getTableProps,\n    headerGroups,\n    prepareRow,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: { pageIndex, pageSize },\n  } = useTable<T>(\n    {\n      columns: tableColumns,\n      data,\n      initialState: {\n        pageIndex: 0,\n        pageSize: initialPageSize,\n      } as any,\n    },\n    useSortBy,\n    usePagination,\n  ) as any;\n\n  return (\n    <Card\n      flexDirection=\"column\"\n      flex={1}\n      maxWidth=\"100%\"\n      width=\"100%\"\n      {...rest}\n    >\n      {heading && (\n        <TopSection alignItems=\"center\" fontWeight=\"bold\">\n          {heading}\n        </TopSection>\n      )}\n\n      <StyledTable {...getTableProps()}>\n        <TableHead>\n          {headerGroups.map(headerGroup => (\n            <Flex\n              key={headerGroup.id}\n              flex={1}\n              flexDirection=\"row\"\n              {...headerGroup.getHeaderGroupProps()}\n            >\n              {headerGroup.headers.map(column => (\n                <TableCell\n                  p={4}\n                  width={column.width}\n                  key={column.id}\n                  bg=\"gray.500\"\n                  justifyContent=\"space-between\"\n                  {...column.getHeaderProps()}\n                  {...column.getSortByToggleProps()}\n                >\n                  <Text fontWeight=\"bold\">{column.render('Header')}</Text>\n\n                  {(() => {\n                    if (column.isSorted) {\n                      if (column.isSortedDesc) {\n                        return <FiChevronDown size={20} />;\n                      }\n\n                      return <FiChevronUp size={20} />;\n                    }\n\n                    return '';\n                  })()}\n                </TableCell>\n              ))}\n            </Flex>\n          ))}\n        </TableHead>\n\n        <Flex flexDirection=\"column\">\n          {page.map((row, key) => {\n            prepareRow(row);\n\n            return (\n              <TableRow\n                onClick={() => onRowClick && onRowClick(row)}\n                  key={key} // eslint-disable-line\n                flexDirection=\"row\"\n                {...row.getRowProps()}\n              >\n                {row.cells.map(cell => (\n                  <TableCell\n                    key={cell.row.index}\n                    justifyContent=\"flex-start\"\n                    p={4}\n                    {...cell.getCellProps()}\n                  >\n                    {cell.render('Cell')}\n                  </TableCell>\n                ))}\n              </TableRow>\n            );\n          })}\n        </Flex>\n      </StyledTable>\n\n      <BottomSection justifyContent=\"space-between\" flexDirection=\"row\">\n        <Flex flexDirection=\"row\">\n          <TableIconButton\n            mr={2}\n            onClick={() => gotoPage(0)}\n            isDisabled={!canPreviousPage}\n            icon={() => <FiChevronsLeft size={20} />}\n          />\n\n          <TableIconButton\n            mr={2}\n            isDisabled={!canPreviousPage}\n            onClick={() => previousPage()}\n            icon={() => <FiChevronLeft size={20} />}\n          />\n        </Flex>\n\n        <Flex justifyContent=\"center\" alignItems=\"center\">\n          <Text mr={4}>\n            Página{' '}\n            <strong>\n              {pageIndex + 1} de\n              {pageOptions.length}\n            </strong>\n          </Text>\n\n          {!isTabletOrMobile && (\n            <select\n              value={pageSize}\n              onChange={e => {\n                setPageSize(Number(e.target.value));\n              }}\n            >\n              {[5, 10, 20, 30, 40, 50].map(size => (\n                <option key={size} value={size}>\n                  {size} linhas\n                </option>\n              ))}\n            </select>\n          )}\n        </Flex>\n\n        <Flex flexDirection=\"row\">\n          <TableIconButton\n            ml={2}\n            isDisabled={!canNextPage}\n            onClick={() => nextPage()}\n            icon={() => <FiChevronRight size={20} />}\n          />\n\n          <TableIconButton\n            ml={2}\n            onClick={() => gotoPage(pageCount ? pageCount - 1 : 1)}\n            isDisabled={!canNextPage}\n            icon={() => <FiChevronsRight size={20} />}\n          />\n        </Flex>\n      </BottomSection>\n    </Card>\n  );\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}