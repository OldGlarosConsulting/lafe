{"ast":null,"code":"var _jsxFileName = \"/home/matheus/Documents/drive-sync/Projects/endor/packages/web/src/pages/register/users.tsx\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { FiSearch, FiUserPlus } from 'react-icons/fi';\nimport { Button, Flex, Tooltip, useDisclosure } from '@chakra-ui/core';\nimport { Form } from '@unform/web'; // eslint-disable-next-line\n\nimport { format } from 'date-fns'; // eslint-disable-next-line\n\nimport { ptBR } from 'date-fns/locale';\nimport Input from '@/components/Input';\nimport CreateCustomersModal from '@/components/Modals/CreateCustomersModal';\nimport CreateEmployeesModal from '@/components/Modals/CreateEmployeesModal';\nimport SEO from '@/components/SEO';\nimport Sidebar from '@/components/Sidebar';\nimport Table from '@/components/Table';\nimport api from '../../services/api'; // eslint-disable-next-line\n\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\nconst CUSTOMERS_TABLE_COLUMNS = [{\n  Header: 'nome',\n  accessor: 'name'\n}, {\n  Header: 'E-mail',\n  accessor: 'email'\n}, {\n  Header: 'Telefone',\n  accessor: 'telephone'\n}, {\n  Header: 'GÃªnero',\n  accessor: 'gender'\n}, {\n  Header: 'CPF',\n  accessor: 'cpf'\n}, {\n  Header: 'Data de nascimento',\n  accessor: 'birth_date_formatted'\n}];\nconst EMPLOYEES_TABLE_COLUMNS = [{\n  Header: 'nome',\n  accessor: 'name'\n}, {\n  Header: 'E-mail',\n  accessor: 'email'\n}];\n\nconst Users = () => {\n  const formRef = useRef(null);\n  const {\n    isOpen: isCreateCustomersOpen,\n    onOpen: onOpenCreateCustomer,\n    onClose: onCloseCreateCustomers\n  } = useDisclosure();\n  const {\n    isOpen: isCreateEmployeesOpen,\n    onOpen: onOpenCreateEmployee,\n    onClose: onCloseCreateEmployees\n  } = useDisclosure();\n  const {\n    0: userSelected,\n    1: setUserSelected\n  } = useState('customer');\n  const {\n    0: customers,\n    1: setCustomers\n  } = useState([]);\n  const {\n    0: employees,\n    1: setEmployees\n  } = useState([]);\n  const getUsers = useCallback(() => {\n    api.get('customers').then(response => {\n      const responseData = response.data;\n      const customersData = [];\n      responseData.forEach(data => {\n        const birth_date_formatted = format(new Date(data.birth_date), \"dd'/'MM'/'yyyy'\", {\n          locale: ptBR\n        });\n        customersData.push({\n          name: data.name,\n          cpf: data.cpf,\n          email: data.email,\n          gender: data.gender,\n          telephone: data.telephone,\n          birth_date_formatted\n        });\n      });\n      setCustomers(customersData);\n    });\n    api.get('employees').then(response => {\n      const responseData = response.data;\n      setEmployees(responseData);\n    });\n  }, []);\n  useEffect(() => {\n    getUsers();\n  }, [getUsers]);\n  const handleChangeToEmployeeScreen = useCallback(() => {\n    setUserSelected('employee');\n  }, [setUserSelected]);\n  const handleChangeToCustomerScreen = useCallback(() => {\n    setUserSelected('customer');\n  }, [setUserSelected]);\n  const handleSearchUser = useCallback(async data => {\n    if (data.customers_search) {\n      const response = await api.get(`customers?name=${data.customers_search}`);\n      const responseData = response.data;\n      const customersData = [];\n      responseData.forEach(customersResponseData => {\n        const birth_date_formatted = format(new Date(customersResponseData.birth_date), \"dd'/'MM'/'yyyy'\", {\n          locale: ptBR\n        });\n        customersData.push({\n          name: customersResponseData.name,\n          cpf: customersResponseData.cpf,\n          email: customersResponseData.cpf,\n          gender: customersResponseData.gender,\n          telephone: customersResponseData.telephone,\n          birth_date_formatted\n        });\n      });\n      setCustomers(customersData);\n    } else {\n      if (!data.employees_search) {\n        return;\n      }\n\n      const response = await api.get(`employees?name=${data.employees_search}`);\n      setEmployees(response.data);\n    }\n  }, []);\n  const handleOpenCreateCustomersModal = useCallback(() => {\n    onOpenCreateCustomer();\n  }, []);\n  const handleOpenCreateEmployeesModal = useCallback(() => {\n    onOpenCreateEmployee();\n  }, []);\n  return ___EmotionJSX(React.Fragment, null, ___EmotionJSX(SEO, {\n    title: \"Endor\",\n    image: \"og/boost.png\",\n    shouldExcludeTitleSuffix: true,\n    description: \"Fazer o registro e pesquisa de usu\\xE1rios na plataforma\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }\n  }), ___EmotionJSX(Flex, {\n    as: \"main\",\n    height: \"100vh\",\n    position: \"relative\",\n    backgroundColor: \"gray.800\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }\n  }, ___EmotionJSX(Sidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }\n  }), ___EmotionJSX(Flex, {\n    paddingLeft: 2,\n    paddingTop: 15,\n    paddingRight: 65,\n    width: \"100%\",\n    height: \"100%\",\n    bg: \"gray.800\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Flex, {\n    justifyContent: \"space-between\",\n    width: \"100%\",\n    color: \"gray.200\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(Button, {\n    width: \"49.8%\",\n    backgroundColor: \"gray.800\",\n    borderRadius: 0,\n    borderBottom: \"2px solid \",\n    borderColor: userSelected === 'customer' ? 'green.200' : 'gray.500',\n    color: userSelected === 'customer' ? 'green.200' : 'White',\n    _hover: {\n      bg: 'gray.800',\n      color: 'White'\n    },\n    _focusWithin: {\n      bg: 'gray.800',\n      color: 'White'\n    },\n    onClick: handleChangeToCustomerScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }, \"Clientes\"), ___EmotionJSX(Button, {\n    width: \"49.8%\",\n    backgroundColor: \"gray.800\",\n    borderRadius: 0,\n    borderBottom: \"2px solid\",\n    borderColor: userSelected === 'employee' ? 'green.200' : 'gray.500',\n    color: userSelected === 'employee' ? 'green.200' : 'White',\n    _hover: {\n      bg: 'gray.800',\n      color: 'White'\n    },\n    _focusWithin: {\n      border: '0px ',\n      bg: 'gray.800',\n      color: 'White'\n    },\n    onClick: handleChangeToEmployeeScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }\n  }, \"Funcion\\xE1rios\")), ___EmotionJSX(Flex, {\n    flexDirection: \"column\",\n    marginTop: 6,\n    height: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(Form, {\n    ref: formRef,\n    onSubmit: handleSearchUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }\n  }, userSelected === 'customer' ? ___EmotionJSX(React.Fragment, null, ___EmotionJSX(Flex, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 19\n    }\n  }, ___EmotionJSX(Input, {\n    placeholder: \"Pesquisar clientes por nome\",\n    name: \"customers_search\",\n    containerProps: {\n      width: 300,\n      height: 40.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 21\n    }\n  }), ___EmotionJSX(Tooltip, {\n    label: \"Pesquisar clientes por nome.\",\n    \"aria-label\": \"Pesquisar clientes por nome.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 21\n    }\n  }, ___EmotionJSX(Button, {\n    marginLeft: 4,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 23\n    }\n  }, ___EmotionJSX(FiSearch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 25\n    }\n  }))), ___EmotionJSX(Tooltip, {\n    label: \"Adicionar novo cliente.\",\n    \"aria-label\": \"Adicionar novo cliente.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 21\n    }\n  }, ___EmotionJSX(Button, {\n    marginLeft: 4,\n    onClick: handleOpenCreateCustomersModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 23\n    }\n  }, ___EmotionJSX(FiUserPlus, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 25\n    }\n  })))), ___EmotionJSX(CreateCustomersModal, {\n    onSave: getUsers,\n    isOpen: isCreateCustomersOpen,\n    onClose: onCloseCreateCustomers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 19\n    }\n  }), ___EmotionJSX(Flex, {\n    marginTop: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 19\n    }\n  }, ___EmotionJSX(Table, {\n    columns: CUSTOMERS_TABLE_COLUMNS,\n    data: customers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 21\n    }\n  }))) : ___EmotionJSX(React.Fragment, null, ___EmotionJSX(Flex, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 19\n    }\n  }, ___EmotionJSX(Input, {\n    placeholder: \"Pesquisar funcion\\xE1rios por nome\",\n    name: \"employees_search\",\n    containerProps: {\n      width: 300,\n      height: 40.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 21\n    }\n  }), ___EmotionJSX(Tooltip, {\n    label: \"Pesquisar funcion\\xE1rios por nome.\",\n    \"aria-label\": \"Pesquisar funcion\\xE1rios por nome.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 21\n    }\n  }, ___EmotionJSX(Button, {\n    marginLeft: 4,\n    type: \"submit\",\n    onClick: handleSearchUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 23\n    }\n  }, ___EmotionJSX(FiSearch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 25\n    }\n  }))), ___EmotionJSX(Tooltip, {\n    label: \"Adicionar novo funcion\\xE1rio.\",\n    \"aria-label\": \"Adicionar novo funcion\\xE1rio.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 21\n    }\n  }, ___EmotionJSX(Button, {\n    marginLeft: 4,\n    onClick: handleOpenCreateEmployeesModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 23\n    }\n  }, ___EmotionJSX(FiUserPlus, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 25\n    }\n  })))), ___EmotionJSX(CreateEmployeesModal, {\n    onSave: getUsers,\n    isOpen: isCreateEmployeesOpen,\n    onClose: onCloseCreateEmployees,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 19\n    }\n  }), ___EmotionJSX(Flex, {\n    marginTop: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 19\n    }\n  }, ___EmotionJSX(Table, {\n    columns: EMPLOYEES_TABLE_COLUMNS,\n    data: employees,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 21\n    }\n  }))))))));\n};\n\nexport default Users;","map":{"version":3,"sources":["/home/matheus/Documents/drive-sync/Projects/endor/packages/web/src/pages/register/users.tsx"],"names":["React","useCallback","useEffect","useRef","useState","FiSearch","FiUserPlus","Button","Flex","Tooltip","useDisclosure","Form","format","ptBR","Input","CreateCustomersModal","CreateEmployeesModal","SEO","Sidebar","Table","api","CUSTOMERS_TABLE_COLUMNS","Header","accessor","EMPLOYEES_TABLE_COLUMNS","Users","formRef","isOpen","isCreateCustomersOpen","onOpen","onOpenCreateCustomer","onClose","onCloseCreateCustomers","isCreateEmployeesOpen","onOpenCreateEmployee","onCloseCreateEmployees","userSelected","setUserSelected","customers","setCustomers","employees","setEmployees","getUsers","get","then","response","responseData","data","customersData","forEach","birth_date_formatted","Date","birth_date","locale","push","name","cpf","email","gender","telephone","handleChangeToEmployeeScreen","handleChangeToCustomerScreen","handleSearchUser","customers_search","customersResponseData","employees_search","handleOpenCreateCustomersModal","handleOpenCreateEmployeesModal","bg","color","border","width","height"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { FiSearch, FiUserPlus } from 'react-icons/fi';\nimport { Column } from 'react-table';\n\nimport { Button, Flex, Tooltip, useDisclosure } from '@chakra-ui/core';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\n// eslint-disable-next-line\nimport { format } from 'date-fns';\n// eslint-disable-next-line\nimport { ptBR } from 'date-fns/locale'\n\nimport Input from '@/components/Input';\nimport CreateCustomersModal from '@/components/Modals/CreateCustomersModal';\nimport CreateEmployeesModal from '@/components/Modals/CreateEmployeesModal';\nimport SEO from '@/components/SEO';\nimport Sidebar from '@/components/Sidebar';\nimport Table from '@/components/Table';\n\nimport api from '../../services/api';\n\n// eslint-disable-next-line\ninterface Employees {\n  name: string;\n  email: string;\n}\n\n// eslint-disable-next-line\ninterface Customers {\n  name: string;\n  email: string;\n  telephone: string;\n  gender: string;\n  cpf: string;\n  birth_date_formatted: string;\n}\n\n// eslint-disable-next-line\ninterface CustomersResponseData {\n  name: string;\n  email: string;\n  telephone: string;\n  gender: string;\n  cpf: string;\n  birth_date: string;\n}\n\nconst CUSTOMERS_TABLE_COLUMNS = [\n  {\n    Header: 'nome',\n    accessor: 'name',\n  },\n  {\n    Header: 'E-mail',\n    accessor: 'email',\n  },\n  {\n    Header: 'Telefone',\n    accessor: 'telephone',\n  },\n  {\n    Header: 'GÃªnero',\n    accessor: 'gender',\n  },\n  {\n    Header: 'CPF',\n    accessor: 'cpf',\n  },\n  {\n    Header: 'Data de nascimento',\n    accessor: 'birth_date_formatted',\n  },\n] as Column[];\n\nconst EMPLOYEES_TABLE_COLUMNS = [\n  {\n    Header: 'nome',\n    accessor: 'name',\n  },\n  {\n    Header: 'E-mail',\n    accessor: 'email',\n  },\n] as Column[];\n\nconst Users: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const {\n    isOpen: isCreateCustomersOpen,\n    onOpen: onOpenCreateCustomer,\n    onClose: onCloseCreateCustomers,\n  } = useDisclosure();\n\n  const {\n    isOpen: isCreateEmployeesOpen,\n    onOpen: onOpenCreateEmployee,\n    onClose: onCloseCreateEmployees,\n  } = useDisclosure();\n\n  const [userSelected, setUserSelected] = useState<'customer' | 'employee'>(\n    'customer',\n  );\n\n  const [customers, setCustomers] = useState<Customers[]>([] as Customers[]);\n  const [employees, setEmployees] = useState<Employees[]>([] as Employees[]);\n\n  const getUsers = useCallback(() => {\n    api.get('customers').then(response => {\n      const responseData = response.data;\n\n      const customersData: Customers[] = [];\n\n      responseData.forEach((data: CustomersResponseData) => {\n        const birth_date_formatted = format(\n          new Date(data.birth_date),\n          \"dd'/'MM'/'yyyy'\",\n          { locale: ptBR },\n        );\n\n        customersData.push({\n          name: data.name,\n          cpf: data.cpf,\n          email: data.email,\n          gender: data.gender,\n          telephone: data.telephone,\n          birth_date_formatted,\n        });\n      });\n      setCustomers(customersData);\n    });\n\n    api.get('employees').then(response => {\n      const responseData = response.data;\n\n      setEmployees(responseData);\n    });\n  }, []);\n\n  useEffect(() => {\n    getUsers();\n  }, [getUsers]);\n\n  const handleChangeToEmployeeScreen = useCallback(() => {\n    setUserSelected('employee');\n  }, [setUserSelected]);\n\n  const handleChangeToCustomerScreen = useCallback(() => {\n    setUserSelected('customer');\n  }, [setUserSelected]);\n\n  const handleSearchUser = useCallback(async data => {\n    if (data.customers_search) {\n      const response = await api.get(`customers?name=${data.customers_search}`);\n\n      const responseData = response.data;\n\n      const customersData: Customers[] = [];\n\n      responseData.forEach((customersResponseData: CustomersResponseData) => {\n        const birth_date_formatted = format(\n          new Date(customersResponseData.birth_date),\n          \"dd'/'MM'/'yyyy'\",\n          { locale: ptBR },\n        );\n\n        customersData.push({\n          name: customersResponseData.name,\n          cpf: customersResponseData.cpf,\n          email: customersResponseData.cpf,\n          gender: customersResponseData.gender,\n          telephone: customersResponseData.telephone,\n          birth_date_formatted,\n        });\n      });\n      setCustomers(customersData);\n    } else {\n      if (!data.employees_search) {\n        return;\n      }\n      const response = await api.get(`employees?name=${data.employees_search}`);\n\n      setEmployees(response.data);\n    }\n  }, []);\n\n  const handleOpenCreateCustomersModal = useCallback(() => {\n    onOpenCreateCustomer();\n  }, []);\n\n  const handleOpenCreateEmployeesModal = useCallback(() => {\n    onOpenCreateEmployee();\n  }, []);\n\n  return (\n    <>\n      <SEO\n        title=\"Endor\"\n        image=\"og/boost.png\"\n        shouldExcludeTitleSuffix\n        description=\"Fazer o registro e pesquisa de usuÃ¡rios na plataforma\"\n      />\n      <Flex\n        as=\"main\"\n        height=\"100vh\"\n        position=\"relative\"\n        backgroundColor=\"gray.800\"\n      >\n        <Sidebar />\n\n        <Flex\n          paddingLeft={2}\n          paddingTop={15}\n          paddingRight={65}\n          width=\"100%\"\n          height=\"100%\"\n          bg=\"gray.800\"\n          direction=\"column\"\n        >\n          <Flex justifyContent=\"space-between\" width=\"100%\" color=\"gray.200\">\n            <Button\n              width=\"49.8%\"\n              backgroundColor=\"gray.800\"\n              borderRadius={0}\n              borderBottom=\"2px solid \"\n              borderColor={\n                userSelected === 'customer' ? 'green.200' : 'gray.500'\n              }\n              color={userSelected === 'customer' ? 'green.200' : 'White'}\n              _hover={{\n                bg: 'gray.800',\n                color: 'White',\n              }}\n              _focusWithin={{\n                bg: 'gray.800',\n                color: 'White',\n              }}\n              onClick={handleChangeToCustomerScreen}\n            >\n              Clientes\n            </Button>\n            <Button\n              width=\"49.8%\"\n              backgroundColor=\"gray.800\"\n              borderRadius={0}\n              borderBottom=\"2px solid\"\n              borderColor={\n                userSelected === 'employee' ? 'green.200' : 'gray.500'\n              }\n              color={userSelected === 'employee' ? 'green.200' : 'White'}\n              _hover={{\n                bg: 'gray.800',\n                color: 'White',\n              }}\n              _focusWithin={{\n                border: '0px ',\n                bg: 'gray.800',\n                color: 'White',\n              }}\n              onClick={handleChangeToEmployeeScreen}\n            >\n              FuncionÃ¡rios\n            </Button>\n          </Flex>\n          <Flex flexDirection=\"column\" marginTop={6} height=\"100%\">\n            <Form ref={formRef} onSubmit={handleSearchUser}>\n              {userSelected === 'customer' ? (\n                <>\n                  <Flex>\n                    <Input\n                      placeholder=\"Pesquisar clientes por nome\"\n                      name=\"customers_search\"\n                      containerProps={{ width: 300, height: 40.5 }}\n                    />\n                    <Tooltip\n                      label=\"Pesquisar clientes por nome.\"\n                      aria-label=\"Pesquisar clientes por nome.\"\n                    >\n                      <Button marginLeft={4} type=\"submit\">\n                        <FiSearch />\n                      </Button>\n                    </Tooltip>\n\n                    <Tooltip\n                      label=\"Adicionar novo cliente.\"\n                      aria-label=\"Adicionar novo cliente.\"\n                    >\n                      <Button\n                        marginLeft={4}\n                        onClick={handleOpenCreateCustomersModal}\n                      >\n                        <FiUserPlus />\n                      </Button>\n                    </Tooltip>\n                  </Flex>\n\n                  <CreateCustomersModal\n                    onSave={getUsers}\n                    isOpen={isCreateCustomersOpen}\n                    onClose={onCloseCreateCustomers}\n                  />\n\n                  <Flex marginTop={6}>\n                    <Table\n                      columns={CUSTOMERS_TABLE_COLUMNS}\n                      data={customers}\n                    ></Table>\n                  </Flex>\n                </>\n              ) : (\n                <>\n                  <Flex>\n                    <Input\n                      placeholder=\"Pesquisar funcionÃ¡rios por nome\"\n                      name=\"employees_search\"\n                      containerProps={{ width: 300, height: 40.5 }}\n                    />\n                    <Tooltip\n                      label=\"Pesquisar funcionÃ¡rios por nome.\"\n                      aria-label=\"Pesquisar funcionÃ¡rios por nome.\"\n                    >\n                      <Button\n                        marginLeft={4}\n                        type=\"submit\"\n                        onClick={handleSearchUser}\n                      >\n                        <FiSearch />\n                      </Button>\n                    </Tooltip>\n\n                    <Tooltip\n                      label=\"Adicionar novo funcionÃ¡rio.\"\n                      aria-label=\"Adicionar novo funcionÃ¡rio.\"\n                    >\n                      <Button\n                        marginLeft={4}\n                        onClick={handleOpenCreateEmployeesModal}\n                      >\n                        <FiUserPlus />\n                      </Button>\n                    </Tooltip>\n                  </Flex>\n\n                  <CreateEmployeesModal\n                    onSave={getUsers}\n                    isOpen={isCreateEmployeesOpen}\n                    onClose={onCloseCreateEmployees}\n                  />\n\n                  <Flex marginTop={6}>\n                    <Table\n                      columns={EMPLOYEES_TABLE_COLUMNS}\n                      data={employees}\n                    ></Table>\n                  </Flex>\n                </>\n              )}\n            </Form>\n          </Flex>\n        </Flex>\n      </Flex>\n    </>\n  );\n};\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}